@model EmployeeModelPackage.RegisterModel
@{
    ViewBag.Title = "User Registration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background-color: #f8f9fa;
        }

        .registration-form {
            max-width: 500px;
            margin: 50px auto;
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .form-title {
            text-align: center;
            margin-bottom: 25px;
        }
    </style>
</head>
<body>

    <div class="registration-form">
        <h2 class="form-title">User Registration</h2>

        @using (Html.BeginForm("Register", "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <label for="name" class="form-label">User Name</label>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control",  @required = "required" })
                <h5 id="note" style="color:red"></h5>
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "email", @type = "email", @required = "required" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                <label for="phone" class="form-label">Phone Number</label>
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", @id = "phonenumber", @pattern = "[0-9]{10}", @required = "required" })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>

            @* <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @id = "password", @pattern = "[0-9]{10}", @required = "required" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div> *@

            <button type="submit" class="btn btn-primary w-100">Register</button>
            <a asp-controller="Home" asp-action="Login" class="btn btn-link">Login</a>

           
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="text-danger mt-3">
                    @Html.ValidationSummary(false)
                </div>
            }
        }
    </div>

    
</body>
</html>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      

            $("#UserName").change(function () {
                 debugger;
        var username = $("#UserName").val();

        $.ajax({
            url: '@Url.Action("IsUserExist", "Home")',
            type: 'GET',
            data: { Username: username },
            success: function (response) {
                debugger;
                if (response == true) {
                   
                    $("#UserName").val("");

                 
                    $("#note").text("This username already exists").show();
                } else {
                    
                    $("#note").hide();
                }
            }
        });
    });

    </script>
